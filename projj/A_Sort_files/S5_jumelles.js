
//position rotation scale
//http://math.stackexchange.com/questions/13150/extracting-rotation-scale-values-from-2d-transformation-matrix
//http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/geom/Matrix.html

var S5_jumelles = function()
{
    var uvs = {
        background:{x:0,y:0,w:1920,h:1080},
        boat:{x:0,y:1080,w:315,h:432},
        shadow:{x:315,y:1080,w:531,h:96},
        jumelles:{x:0,y:1512,w:1920,h:1080},
        plane:{x:0,y:2594,w:602,h:227},
        size: {w:2048,h:4096}
    }

    var sizes = {
        jumelles : [ 1920,1080 ],
        plane : [ 602,227 ],
        boat : [ 315,432 ],
        shadow : [ 531,96 ],
        background : [ 1920,1080 ],
    };
    var frames = {
        background : [ 1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0 ],
        plane : [ 1,0,0,1,-332.35,323.25,1,0,0,1,-295.5,321.1,1,0,0,1,-258.65,318.95,1,0,0,1,-221.85,316.85,1,0,0,1,-185,314.7,1,0,0,1,-148.15,312.55,1,0,0,1,-111.3,310.45,1,0,0,1,-74.5,308.3,1,0,0,1,-37.65,306.15,1,0,0,1,-0.8,304,1,0,0,1,36.05,301.9,1,0,0,1,72.85,299.75,1,0,0,1,109.7,297.6,1,0,0,1,146.55,295.5,1,0,0,1,183.4,293.35,1,0,0,1,220.2,291.2,1,0,0,1,257.05,289.05,1,0,0,1,293.9,286.95,1,0,0,1,330.75,284.8,1,0,0,1,367.55,282.65,1,0,0,1,404.4,280.55,1,0,0,1,441.25,278.4,1,0,0,1,478.1,276.25,1,0,0,1,514.9,274.1,1,0,0,1,551.75,272,1,0,0,1,588.6,269.85,1,0,0,1,625.45,267.7,1,0,0,1,662.25,265.6,1,0,0,1,699.1,263.45,1,0,0,1,735.95,261.3,1,0,0,1,772.8,259.15,1,0,0,1,809.6,257.05,1,0,0,1,846.45,254.9,1,0,0,1,883.3,252.75,1,0,0,1,920.15,250.65,1,0,0,1,956.95,248.5,1,0,0,1,993.8,246.35,1,0,0,1,1030.65,244.2,1,0,0,1,1067.5,242.1,1,0,0,1,1104.3,239.95,1,0,0,1,1141.15,237.8,1,0,0,1,1178,235.7,1,0,0,1,1214.85,233.55,1,0,0,1,1251.65,231.4,1,0,0,1,1288.5,229.25,1,0,0,1,1325.35,227.15,1,0,0,1,1362.2,225,1,0,0,1,1399,222.85,1,0,0,1,1435.85,220.75,1,0,0,1,1472.7,218.6,1,0,0,1,1509.55,216.45,1,0,0,1,1546.35,214.3,1,0,0,1,1583.2,212.2,1,0,0,1,1620.05,210.05,1,0,0,1,1656.9,207.9,1,0,0,1,1693.7,205.8,1,0,0,1,1730.55,203.65,1,0,0,1,1767.4,201.5,1,0,0,1,1804.25,199.35 ],
        jumelles : [ 1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0 ],
        shadow : [ 0.9999847412109375,0.000701904296875,-0.000701904296875,0.9999847412109375,1023.15,749.2,0.999969482421875,0.004669189453125,-0.004669189453125,0.999969482421875,1023.6,747.55,0.999969482421875,0.00537109375,-0.00537109375,0.999969482421875,1023.85,746.65,0.9999237060546875,0.00933837890625,-0.00933837890625,0.9999237060546875,1024.2,744.95,0.9998626708984375,0.0133056640625,-0.0133056640625,0.9998626708984375,1024.65,743.2,0.999847412109375,0.014007568359375,-0.014007568359375,0.999847412109375,1024.95,742.4,0.9997711181640625,0.017974853515625,-0.017974853515625,0.9997711181640625,1025.3,740.75,0.9996795654296875,0.0219879150390625,-0.0219879150390625,0.9996795654296875,1025.65,739,0.999664306640625,0.0226898193359375,-0.0226898193359375,0.999664306640625,1026,738.1,0.9995574951171875,0.0266571044921875,-0.0266571044921875,0.9995574951171875,1026.35,736.4,0.999420166015625,0.0306243896484375,-0.0306243896484375,0.999420166015625,1026.8,734.75,0.9994049072265625,0.0313262939453125,-0.0313262939453125,0.9994049072265625,1027.05,733.9,0.9992523193359375,0.0352935791015625,-0.0352935791015625,0.9992523193359375,1027.45,732.2,0.9992218017578125,0.0392608642578125,-0.0392608642578125,0.9992218017578125,1027.9,730.45,0.9990692138671875,0.040008544921875,-0.040008544921875,0.9990692138671875,1028.2,729.7,0.9988861083984375,0.0439605712890625,-0.0439605712890625,0.9988861083984375,1028.6,728,0.9988555908203125,0.0446624755859375,-0.0446624755859375,0.9988555908203125,1028.85,727.2,0.9986572265625,0.0486297607421875,-0.0486297607421875,0.9986572265625,1029.35,725.45,0.998443603515625,0.0525970458984375,-0.0525970458984375,0.998443603515625,1029.7,723.8,0.9983978271484375,0.0532989501953125,-0.0532989501953125,0.9983978271484375,1030,722.9,0.998443603515625,0.05242919921875,-0.05242919921875,0.998443603515625,1030.2,723.7,0.9986724853515625,0.04827880859375,-0.04827880859375,0.9986724853515625,1030.25,725.25,0.998870849609375,0.0441436767578125,-0.0441436767578125,0.998870849609375,1030.25,726.8,0.9990692138671875,0.040008544921875,-0.040008544921875,0.9990692138671875,1030.3,728.4,0.999237060546875,0.035858154296875,-0.035858154296875,0.999237060546875,1030.3,730,0.999267578125,0.0349884033203125,-0.0349884033203125,0.999267578125,1030.5,730.7,0.999420166015625,0.0308380126953125,-0.0308380126953125,0.999420166015625,1030.55,732.25,0.999542236328125,0.026702880859375,-0.026702880859375,0.999542236328125,1030.65,733.8,0.999664306640625,0.022552490234375,-0.022552490234375,0.999664306640625,1030.7,735.4,0.9997711181640625,0.0184173583984375,-0.0184173583984375,0.9997711181640625,1030.75,737.05,0.999786376953125,0.0175323486328125,-0.0175323486328125,0.999786376953125,1031.05,737.75,0.9998626708984375,0.013397216796875,-0.013397216796875,0.9998626708984375,1031.05,739.3,0.9999237060546875,0.009246826171875,-0.009246826171875,0.9999237060546875,1031.1,740.9,0.999969482421875,0.0051116943359375,-0.0051116943359375,0.999969482421875,1031.15,742.5,0.9999847412109375,0.0009613037109375,-0.0009613037109375,0.9999847412109375,1031.25,744.1,1,0.0001373291015625,-0.0001373291015625,1,1031.5,744.75,0.9999847412109375,-0.000701904296875,0.000701904296875,0.9999847412109375,1031.75,745.5,0.999969482421875,-0.0048370361328125,0.0048370361328125,0.999969482421875,1031.85,747.1,0.9999237060546875,-0.0089874267578125,0.0089874267578125,0.9999237060546875,1031.95,748.7,0.9998626708984375,-0.0131378173828125,0.0131378173828125,0.9998626708984375,1032,750.25,0.999847412109375,-0.014007568359375,0.014007568359375,0.999847412109375,1032.25,750.95,0.9997711181640625,-0.018157958984375,0.018157958984375,0.9997711181640625,1032.35,752.6,0.9996795654296875,-0.0222930908203125,0.0222930908203125,0.9996795654296875,1032.4,754.15,0.9995574951171875,-0.0264434814453125,0.0264434814453125,0.9995574951171875,1032.6,755.7,0.999420166015625,-0.03057861328125,0.03057861328125,0.999420166015625,1032.75,757.3,0.9993896484375,-0.0314483642578125,0.0314483642578125,0.9993896484375,1033,758.1,0.999420166015625,-0.0308074951171875,0.0308074951171875,0.999420166015625,1032.1,757.9,0.999542236328125,-0.0268707275390625,0.0268707275390625,0.999542236328125,1031.4,756.85,0.9995574951171875,-0.026214599609375,0.026214599609375,0.9995574951171875,1030.55,756.75,0.9996795654296875,-0.0222930908203125,0.0222930908203125,0.9996795654296875,1029.75,755.7,0.9997711181640625,-0.01837158203125,0.01837158203125,0.9997711181640625,1029.15,754.7,0.999786376953125,-0.017669677734375,0.017669677734375,0.999786376953125,1028.35,754.5,0.999847412109375,-0.0137481689453125,0.0137481689453125,0.999847412109375,1027.6,753.5,0.999908447265625,-0.013092041015625,0.013092041015625,0.999908447265625,1026.7,753.35,0.9999237060546875,-0.0091552734375,0.0091552734375,0.9999237060546875,1026,752.35,0.999969482421875,-0.0052337646484375,0.0052337646484375,0.999969482421875,1025.35,751.35,0.999969482421875,-0.00457763671875,0.00457763671875,0.999969482421875,1024.5,751.15,0.9999847412109375,-0.0006561279296875,0.0006561279296875,0.9999847412109375,1023.85,750.2,1,0,0,1,1023,750 ],
        boat : [ 0.9999847412109375,0.0007781982421875,-0.0007781982421875,0.9999847412109375,1251.3,345.55,0.999969482421875,0.0048828125,-0.0048828125,0.999969482421875,1252.3,344.6,0.9999237060546875,0.008941650390625,-0.008941650390625,0.9999237060546875,1253.3,343.7,0.999908447265625,0.0097808837890625,-0.0097808837890625,0.999908447265625,1253.65,343.2,0.999847412109375,0.013824462890625,-0.013824462890625,0.999847412109375,1254.55,342.35,0.9997711181640625,0.0179290771484375,-0.0179290771484375,0.9997711181640625,1255.65,341.4,0.9996795654296875,0.0219879150390625,-0.0219879150390625,0.9996795654296875,1256.65,340.5,0.999664306640625,0.0228118896484375,-0.0228118896484375,0.999664306640625,1256.95,340,0.999542236328125,0.02691650390625,-0.02691650390625,0.999542236328125,1258.05,339.05,0.9994049072265625,0.030975341796875,-0.030975341796875,0.9994049072265625,1259.05,338.15,0.999267578125,0.0350799560546875,-0.0350799560546875,0.999267578125,1260.05,337.25,0.999237060546875,0.035858154296875,-0.035858154296875,0.999237060546875,1260.35,336.8,0.9990692138671875,0.0399627685546875,-0.0399627685546875,0.9990692138671875,1261.35,335.85,0.9988861083984375,0.04400634765625,-0.04400634765625,0.9988861083984375,1262.35,334.95,0.9986724853515625,0.0481109619140625,-0.0481109619140625,0.9986724853515625,1263.45,334.1,0.9986419677734375,0.04888916015625,-0.04888916015625,0.9986419677734375,1263.8,333.6,0.9986724853515625,0.0481109619140625,-0.0481109619140625,0.9986724853515625,1263.55,333.9,0.998870849609375,0.0440521240234375,-0.0440521240234375,0.998870849609375,1262.6,334.55,0.9990692138671875,0.040008544921875,-0.040008544921875,0.9990692138671875,1261.65,335.25,0.999237060546875,0.03594970703125,-0.03594970703125,0.999237060546875,1260.65,336,0.9992523193359375,0.03515625,-0.03515625,0.9992523193359375,1260.45,336.25,0.9994049072265625,0.0311126708984375,-0.0311126708984375,0.9994049072265625,1259.55,336.95,0.999542236328125,0.0270538330078125,-0.0270538330078125,0.999542236328125,1258.6,337.7,0.9995574951171875,0.0262603759765625,-0.0262603759765625,0.9995574951171875,1258.3,337.9,0.9996795654296875,0.0222015380859375,-0.0222015380859375,0.9996795654296875,1257.4,338.65,0.9997711181640625,0.018157958984375,-0.018157958984375,0.9997711181640625,1256.4,339.35,0.999847412109375,0.01409912109375,-0.01409912109375,0.999847412109375,1255.45,340.15,0.9998626708984375,0.0133056640625,-0.0133056640625,0.9998626708984375,1255.35,340.35,0.9999237060546875,0.009246826171875,-0.009246826171875,0.9999237060546875,1254.35,341.1,0.999969482421875,0.00518798828125,-0.00518798828125,0.999969482421875,1253.4,341.85,0.999969482421875,0.0044097900390625,-0.0044097900390625,0.999969482421875,1253.25,342.05,0.9999847412109375,0.0003509521484375,-0.0003509521484375,0.9999847412109375,1252.35,342.85,0.9999847412109375,-0.000396728515625,0.000396728515625,0.9999847412109375,1252.15,343.05,0.999969482421875,-0.00445556640625,0.00445556640625,0.999969482421875,1251.2,343.85,0.999969482421875,-0.0052337646484375,0.0052337646484375,0.999969482421875,1250.95,344.05,0.9999237060546875,-0.0092926025390625,0.0092926025390625,0.9999237060546875,1250.05,344.8,0.9998626708984375,-0.0133514404296875,0.0133514404296875,0.9998626708984375,1249.15,345.6,0.999847412109375,-0.014129638671875,0.014129638671875,0.999847412109375,1248.9,345.85,0.9997711181640625,-0.0181884765625,0.0181884765625,0.9997711181640625,1248,346.6,0.9996795654296875,-0.022247314453125,0.022247314453125,0.9996795654296875,1247.1,347.4,0.9995574951171875,-0.02630615234375,0.02630615234375,0.9995574951171875,1246.15,348.2,0.999542236328125,-0.027099609375,0.027099609375,0.999542236328125,1246,348.4,0.9995574951171875,-0.0266571044921875,0.0266571044921875,0.9995574951171875,1245.95,348.45,0.9995574951171875,-0.026214599609375,0.026214599609375,0.9995574951171875,1246,348.5,0.999664306640625,-0.0225067138671875,0.0225067138671875,0.999664306640625,1246.85,348.05,0.9996795654296875,-0.0220794677734375,0.0220794677734375,0.9996795654296875,1246.9,348.1,0.9997711181640625,-0.01837158203125,0.01837158203125,0.9997711181640625,1247.6,347.6,0.9997711181640625,-0.0179290771484375,0.0179290771484375,0.9997711181640625,1247.6,347.6,0.999847412109375,-0.0174560546875,0.0174560546875,0.999847412109375,1247.7,347.65,0.999847412109375,-0.0137481689453125,0.0137481689453125,0.999847412109375,1248.4,347.2,0.9998626708984375,-0.0133056640625,0.0133056640625,0.9998626708984375,1248.5,347.25,0.9999237060546875,-0.0095977783203125,0.0095977783203125,0.9999237060546875,1249.2,346.7,0.9999237060546875,-0.0091552734375,0.0091552734375,0.9999237060546875,1249.25,346.8,0.999969482421875,-0.00872802734375,0.00872802734375,0.999969482421875,1249.3,346.85,0.999969482421875,-0.0050201416015625,0.0050201416015625,0.999969482421875,1250.1,346.3,0.999969482421875,-0.00457763671875,0.00457763671875,0.999969482421875,1250.15,346.4,0.9999847412109375,-0.0008697509765625,0.0008697509765625,0.9999847412109375,1250.85,345.95,0.9999847412109375,-0.0004425048828125,0.0004425048828125,0.9999847412109375,1250.9,345.95,1,0,0,1,1251,346 ],
    };

    var sceneWidth = 1920;
    var sceneHeight = 1080;

    var spritesheetWidth;
    var spriteSheetHeight;
    var spritesheet;
    var frame = 0;
    var startTime = 0;
    function Animation() {

        Scene.call(this);
        this.elements = [];

        this.camera = new THREE.OrthographicCamera( -stage3d.resolution.x / 2,
                                                     stage3d.resolution.x / 2,
                                                     stage3d.resolution.y / 2,
                                                    -stage3d.resolution.y / 2,0,10000 );


    }

    function updateAspectRatio(){

        this.camera.left = -stage3d.resolution.x / 2;
        this.camera.right = stage3d.resolution.x / 2;
        this.camera.top = stage3d.resolution.y / 2;
        this.camera.bottom = -stage3d.resolution.y / 2;

        this.camera.updateProjectionMatrix();
    }

    var radius = .75;
    var brightness = 5;
    var planeMaterial;
    var bgMaterial;
    function init(cb )
    {
        var scope = this;

        //texture
        spritesheet = materials.bitmap.clone();

        spritesheet.transparent = true;

            textures.loadTexture( "src/3d/textures/animation/landscape.png", function(t)
            {

                spritesheet.uniforms.texture.value = t;
                spritesheet.uniforms.radius.value = radius;
               // spritesheet.uniforms.brightness.value = brightness;

                t.minFilter = THREE.LinearFilter;
                texture = t;
                planeMaterial = materials.bitmap.clone();
                planeMaterial.uniforms.radius.value = radius;
                planeMaterial.uniforms.texture.value = t;
                planeMaterial.transparent = true;
                startTime = Date.now();

                scope.plane = new THREE.Mesh( getPlaneBufferGeometry(uvs.plane.x/uvs.size.w,uvs.plane.y/uvs.size.h,uvs.plane.w/uvs.size.w,uvs.plane.h/uvs.size.h), planeMaterial);
                scope.plane.scale.set( uvs.plane.w/2, uvs.plane.h/2, 1);
                scope.plane.position.set( 0, 1190, 0);
                scope.group.add(scope.plane);

                animateObject("shadow",scope);
                //animateObject("plane",scope);
                animateObject("boat",scope);
                stage3d.render( scope, scope.camera, Scene.rtt );

                textures.loadTexture( "src/3d/textures/7_jumelles/background.jpg", function(t){

                    texture = t;
                    bgMaterial = materials.bitmap.clone();
                    bgMaterial.uniforms.texture.value = t;
                    bgMaterial.uniforms.radius.value = radius;
                    
                    bgMaterial.transparent = true;
                    t.minFilter = THREE.LinearFilter;
                    scope.bgMaterial = bgMaterial;
                    var superSky = new THREE.Mesh( getPlaneBufferGeometry(0,0,1,1), bgMaterial);
                    superSky.scale.set( 4096 * 2, 4096 *2, 1);
                    superSky.position.set( 0, 0, -100);
                    scope.group.add(superSky);

                    scope.sky = new THREE.Mesh( getPlaneBufferGeometry(0,0,1,1), bgMaterial);
                    scope.sky.scale.set( 4096, 4096, 1);
                    scope.sky.position.set( 0, 0, -10);
                    scope.group.add(scope.sky);


                    scope.loaded = true;
                    if( cb )cb();
                });

            });


    }

    function animateObject(key,scope){

        var i = 0;
        spritesheetWidth = uvs.size.w;
        spriteSheetHeight = uvs.size.h;

        var size = sizes[key];
        var rect = uvs[ key ];
        var geom = getPlaneBufferGeometry( rect.x / spritesheetWidth, rect.y / spriteSheetHeight, rect.w / spritesheetWidth, rect.h / spriteSheetHeight );

        var m = new THREE.Mesh( geom, spritesheet );
        m.position.y -= size[1] / 2;
        m.scale.set( size[0], size[1], 1 );

        var g = new THREE.Group();
        g.add( m );
        g.renderOrder = sizes.length - i;

        g.position.x = frames[ key ][4] - sceneWidth / 2;
        g.position.y = sceneHeight / 2 - frames[ key ][5];
        g.position.z = -i * 5;
        g.rotation.z = Math.atan2( frames[2], frames[3] );
        
        g.name = key;

        if( frames[key][4] == 0 )
        {
            frames[key].slice(0, 6);
        }

        g.frames = frames[ key ];
        scope.elements.push( g );
        scope.group.add( g );

        i++;
    }

    function update( mouse )
    {

        if(brightness > 1)brightness -= 0.05;
        else brightness = 1;
        bgMaterial.uniforms.brightness.value = brightness;
        if( !this.loaded )return;

        spritesheet.uniforms.resolution.value = stage3d.resolution;
        planeMaterial.uniforms.resolution.value = stage3d.resolution;
        bgMaterial.uniforms.resolution.value = stage3d.resolution;


        var time = this.time;
        frame = ( ( Date.now() - startTime ) * .001 );
        time *= 1.4;
        if(time < 1.15)this.camera.position.y = 1600 -time*2100;
        this.camera.position.x = 1600 -time*1600;
        this.plane.position.x = 0 + time*5000;
        if(time >= 0.17 && time <= 0.19)window.audioAPI.playOnce('avion');
        if(time >= 0.69 && time <= 0.70)window.audioAPI.playOnce('bateau');
        if(time >= 0.9 && time <= 1.1)window.audioAPI.playOnce('plage');
        for( var i = 0; i< this.elements.length; i++ )
        {
            var l = this.elements[i];

            var id = parseInt( parseInt( time * ( l.frames.length - 1 )  ) / 6 ) * 6;
            if(l.name == "boat" || l.name == "shadow" )
            {
                id = parseInt( parseInt( ( ( frame * .3 ) % 1 ) * ( l.frames.length - 1 )  ) / 6 ) * 6;
            }

            if( l.frames[id+4] != 0 )
            {
                l.position.x = l.frames[id+4] - sceneWidth / 2;
                l.position.y = sceneHeight/2 - l.frames[id+5];

                l.scale.x = l.frames[id];
                l.scale.y = l.frames[id + 3];
                l.rotation.z = Math.atan2(l.frames[id+2], l.frames[id+3] );

            }
            else
            {
                l.position.x = 0;
                l.position.y = sceneHeight/2;
                l.rotation.z = 0;
            }

            if( l.name == "shadow" )//bug pourri à l'export de Flash...
            {
                l.position.x += 100;
                l.position.y += 5;
            }

        }
        return true;

    }

    var _p = Animation.prototype = Object.create( Scene.prototype );
    _p.constructor = Animation;
    _p.init = init;
    _p.update = update;
    _p.updateAspectRatio = updateAspectRatio;
    return Animation;
}();